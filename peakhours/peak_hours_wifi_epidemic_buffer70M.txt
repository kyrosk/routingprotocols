## Peak hours epidemic protocol with more nodes to represent peak hours and also wifi connection and buffer size of 70M### Scenario settingsScenario.name = peakhours_wificonnection-buffer70-epidemicScenario.simulateConnections = trueScenario.updateInterval = 0.1# 14400 == 4hScenario.endTime = 14400## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Wi-fi" interface for all nodeswifiInterface.type = SimpleBroadcastInterface# Transmit speed of 8 M wifiInterface.transmitSpeed = 8MwifiInterface.transmitRange = 40# High speed, long range, interfacehighspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 10MhighspeedInterface.transmitRange = 80# Define 5 different node groupsScenario.nrofHostGroups = 5## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groupsGroup.movementModel = ShortestPathMapBasedMovementGroup.router = EpidemicRouter#Buffer size 70MGroup.bufferSize = 70M# All nodes have the wi-fi interface and high speed interfaceGroup.nrofInterfaces = 2Group.interface1 = wifiInterfaceGroup.interface2 = highspeedInterface# Walking speedsGroup.speed = 0.5, 2.0#This number of hosts is selected as this scenario is for peak hours with more pedestrians , trams and buses presentedGroup.nrofHosts = 100# group1 (pedestrians) specific settingsGroup1.groupID = pGroup1.nrofHosts = 32# group2 specific settingsGroup2.groupID = c# cars can drive only on roadsGroup2.okMaps = 1Group2.speed = 2.0, 12.0Group2.nrofHosts = 32# The Tram groupGroup3.groupID = tGroup3.movementModel = MapRouteMovementGroup3.routeFile = data/tram3.wktGroup3.routeType = 1Group3.waitTime = 10, 30Group3.speed = 3.0 , 7.0Group3.nrofHosts = 34# Source node of accident specific settingsGroup4.groupID = aGroup4.movementModel = StationaryMovementGroup4.nrofHosts = 1#node specific location in the map Group4.nodeLocation = 1178,147#Destination of hospital nodeGroup5.groupID = hsGroup5.movementModel = StationaryMovementGroup5.nrofHosts = 1#Selected node location so that the 2 locations can be far from each otherGroup5.nodeLocation = 3314,2119## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 40,70# Message sizes (500kB - 1MB)Events1.size = 500k,1M# Source node for all of our runs will be the accidentEvents1.hosts = 98,98#Destination node for all of our runs will be the hospitalEvents1.tohosts = 99,99# Message ID prefixEvents1.prefix = M## Movement model settings#We change this as we will do 10 different runs for our protocols and to avoid any identical resultsMovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 5MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wktMapBasedMovement.mapFile5 = data/tram3.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 2# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/peak_hours_reports# Report classes to loadReport.report1 = MessageStatsReportReport.report2 = MessageDeliveryReport## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$